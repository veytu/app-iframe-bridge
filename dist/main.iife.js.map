{"version":3,"file":"main.iife.js","sources":["../../../node_modules/.pnpm/side-effect-manager@1.2.1/node_modules/side-effect-manager/dist/side-effect-manager.es.js","../../app-shared/src/ensure-attributes.ts","../../../node_modules/.pnpm/emittery@0.10.1/node_modules/emittery/index.js","../src/page.ts","../src/hardcode.ts","../src/typings.ts","../src/utils.ts","../src/environment.ts","../src/index.ts"],"sourcesContent":["const SOUP = \"!#%()*+,-./:;=?@[]^_`{|}~ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nconst SOUP_LEN = 87;\nconst ID_LEN = 20;\nconst reusedIdCarrier = [];\nconst genUID = () => {\n  for (let i = 0; i < ID_LEN; i++) {\n    reusedIdCarrier[i] = SOUP.charAt(Math.random() * SOUP_LEN);\n  }\n  return reusedIdCarrier.join(\"\");\n};\nfunction invoke(fn) {\n  try {\n    return fn();\n  } catch (e) {\n    console.error(e);\n  }\n}\nclass SideEffectManager {\n  constructor() {\n    this.push = this.addDisposer;\n    this.disposers = new Map();\n  }\n  addDisposer(disposer, disposerID = this.genUID()) {\n    this.flush(disposerID);\n    this.disposers.set(disposerID, Array.isArray(disposer) ? joinDisposers(disposer) : disposer);\n    return disposerID;\n  }\n  add(executor, disposerID = this.genUID()) {\n    const disposers = executor();\n    return disposers ? this.addDisposer(disposers, disposerID) : disposerID;\n  }\n  addEventListener(el, type, listener, options, disposerID = this.genUID()) {\n    el.addEventListener(type, listener, options);\n    this.addDisposer(() => el.removeEventListener(type, listener, options), disposerID);\n    return disposerID;\n  }\n  setTimeout(handler, timeout, disposerID = this.genUID()) {\n    const ticket = window.setTimeout(() => {\n      this.remove(disposerID);\n      handler();\n    }, timeout);\n    return this.addDisposer(() => window.clearTimeout(ticket), disposerID);\n  }\n  setInterval(handler, timeout, disposerID = this.genUID()) {\n    const ticket = window.setInterval(handler, timeout);\n    return this.addDisposer(() => window.clearInterval(ticket), disposerID);\n  }\n  remove(disposerID) {\n    const disposer = this.disposers.get(disposerID);\n    this.disposers.delete(disposerID);\n    return disposer;\n  }\n  flush(disposerID) {\n    const disposer = this.remove(disposerID);\n    if (disposer) {\n      disposer();\n    }\n  }\n  flushAll() {\n    this.disposers.forEach(invoke);\n    this.disposers.clear();\n  }\n  genUID() {\n    let uid;\n    do {\n      uid = genUID();\n    } while (this.disposers.has(uid));\n    return uid;\n  }\n}\nfunction joinDisposers(disposers) {\n  return () => disposers.forEach(invoke);\n}\nclass AsyncSideEffectManager {\n  constructor() {\n    this.push = this.addDisposer;\n    this.finished = Promise.resolve();\n    this.disposers = new Map();\n    this._nextTask = new Map();\n    this._isRunning = new Set();\n  }\n  add(executor, disposerID = this.genUID()) {\n    if (this._isRunning.has(disposerID)) {\n      this._nextTask.set(disposerID, () => this._add(executor, disposerID));\n    } else {\n      this._add(executor, disposerID);\n    }\n    return disposerID;\n  }\n  async _add(executor, disposerID) {\n    this._startTask(disposerID);\n    const disposer = this.remove(disposerID);\n    if (disposer) {\n      try {\n        await disposer();\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    try {\n      const disposers = await executor();\n      if (disposers) {\n        this.disposers.set(disposerID, Array.isArray(disposers) ? joinAsyncDisposers(disposers) : disposers);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    this._endTask(disposerID);\n    const task = this._nextTask.get(disposerID);\n    if (task) {\n      this._nextTask.delete(disposerID);\n      task();\n    }\n  }\n  addDisposer(disposer, disposerID = this.genUID()) {\n    return this.add(() => disposer, disposerID);\n  }\n  remove(disposerID) {\n    const disposer = this.disposers.get(disposerID);\n    this.disposers.delete(disposerID);\n    return disposer;\n  }\n  flush(disposerID) {\n    if (this._isRunning.has(disposerID)) {\n      this._nextTask.set(disposerID, () => this._flush(disposerID));\n    } else {\n      this._flush(disposerID);\n    }\n  }\n  async _flush(disposerID) {\n    const disposer = this.remove(disposerID);\n    if (disposer) {\n      this._startTask(disposerID);\n      try {\n        await disposer();\n      } catch (e) {\n        console.error(e);\n      }\n      this._endTask(disposerID);\n    }\n    const task = this._nextTask.get(disposerID);\n    if (task) {\n      this._nextTask.delete(disposerID);\n      task();\n    }\n  }\n  flushAll() {\n    this.disposers.forEach((_, disposerID) => this.flush(disposerID));\n  }\n  genUID() {\n    let uid;\n    do {\n      uid = genUID();\n    } while (this.disposers.has(uid));\n    return uid;\n  }\n  _startTask(disposerID) {\n    this._isRunning.add(disposerID);\n    if (!this._resolveFinished) {\n      this.finished = new Promise((resolve) => {\n        this._resolveFinished = resolve;\n      });\n    }\n  }\n  _endTask(disposerID) {\n    this._isRunning.delete(disposerID);\n    if (this._resolveFinished && this._isRunning.size <= 0 && this._nextTask.size <= 0) {\n      this._resolveFinished();\n      this._resolveFinished = void 0;\n    }\n  }\n}\nfunction joinAsyncDisposers(disposers) {\n  return () => Promise.all(disposers.map(invoke));\n}\nclass Disposable {\n  constructor() {\n    this.push = this.addDisposer;\n    this.disposers = new Set();\n  }\n  addDisposer(disposers) {\n    if (Array.isArray(disposers)) {\n      disposers.forEach((disposer) => {\n        this.disposers.add(disposer);\n      });\n    } else {\n      this.disposers.add(disposers);\n    }\n  }\n  add(executor) {\n    const disposers = executor();\n    if (disposers) {\n      this.push(disposers);\n    }\n  }\n  addEventListener(el, type, listener, options) {\n    el.addEventListener(type, listener, options);\n    const disposer = () => el.removeEventListener(type, listener, options);\n    this.push(disposer);\n    return disposer;\n  }\n  setTimeout(handler, timeout) {\n    const ticket = window.setTimeout(() => {\n      this.remove(disposer);\n      handler();\n    }, timeout);\n    const disposer = () => window.clearTimeout(ticket);\n    this.push(disposer);\n    return disposer;\n  }\n  setInterval(handler, timeout) {\n    const ticket = setInterval(handler, timeout);\n    const disposer = () => clearInterval(ticket);\n    this.push(disposer);\n    return disposer;\n  }\n  remove(disposer) {\n    this.disposers.delete(disposer);\n  }\n  flush(disposer) {\n    this.remove(disposer);\n    disposer();\n  }\n  flushAll() {\n    this.disposers.forEach(invoke);\n    this.disposers.clear();\n  }\n}\nexport { AsyncSideEffectManager, Disposable, SideEffectManager, genUID, joinAsyncDisposers, joinDisposers };\n//# sourceMappingURL=side-effect-manager.es.js.map\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { AppContext } from \"@netless/window-manager\";\n\nfunction isObject(val: unknown): val is Record<string, unknown> {\n  return val != null && typeof val === \"object\" && !Array.isArray(val);\n}\n\nexport interface Attributes {\n  [key: string]: any;\n}\n\nexport function ensureAttributes<T extends Attributes>(context: AppContext<T>, initAttrs: T): T {\n  let attrs = context.getAttributes();\n  if (!attrs) {\n    context.setAttributes(initAttrs);\n    attrs = context.getAttributes();\n  }\n  if (!attrs) {\n    throw new Error(\"[NetlessAppMonaco] No attributes\");\n  }\n  if (isObject(initAttrs)) {\n    Object.keys(initAttrs).forEach(key => {\n      if (!Object.prototype.hasOwnProperty.call(attrs, key)) {\n        context.updateAttributes([key], initAttrs[key] as {});\n      }\n    });\n  }\n  return attrs;\n}\n","'use strict';\n\nconst anyMap = new WeakMap();\nconst eventsMap = new WeakMap();\nconst producersMap = new WeakMap();\nconst anyProducer = Symbol('anyProducer');\nconst resolvedPromise = Promise.resolve();\n\nconst listenerAdded = Symbol('listenerAdded');\nconst listenerRemoved = Symbol('listenerRemoved');\n\nlet isGlobalDebugEnabled = false;\n\nfunction assertEventName(eventName) {\n\tif (typeof eventName !== 'string' && typeof eventName !== 'symbol') {\n\t\tthrow new TypeError('eventName must be a string or a symbol');\n\t}\n}\n\nfunction assertListener(listener) {\n\tif (typeof listener !== 'function') {\n\t\tthrow new TypeError('listener must be a function');\n\t}\n}\n\nfunction getListeners(instance, eventName) {\n\tconst events = eventsMap.get(instance);\n\tif (!events.has(eventName)) {\n\t\tevents.set(eventName, new Set());\n\t}\n\n\treturn events.get(eventName);\n}\n\nfunction getEventProducers(instance, eventName) {\n\tconst key = typeof eventName === 'string' || typeof eventName === 'symbol' ? eventName : anyProducer;\n\tconst producers = producersMap.get(instance);\n\tif (!producers.has(key)) {\n\t\tproducers.set(key, new Set());\n\t}\n\n\treturn producers.get(key);\n}\n\nfunction enqueueProducers(instance, eventName, eventData) {\n\tconst producers = producersMap.get(instance);\n\tif (producers.has(eventName)) {\n\t\tfor (const producer of producers.get(eventName)) {\n\t\t\tproducer.enqueue(eventData);\n\t\t}\n\t}\n\n\tif (producers.has(anyProducer)) {\n\t\tconst item = Promise.all([eventName, eventData]);\n\t\tfor (const producer of producers.get(anyProducer)) {\n\t\t\tproducer.enqueue(item);\n\t\t}\n\t}\n}\n\nfunction iterator(instance, eventNames) {\n\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\tlet isFinished = false;\n\tlet flush = () => {};\n\tlet queue = [];\n\n\tconst producer = {\n\t\tenqueue(item) {\n\t\t\tqueue.push(item);\n\t\t\tflush();\n\t\t},\n\t\tfinish() {\n\t\t\tisFinished = true;\n\t\t\tflush();\n\t\t}\n\t};\n\n\tfor (const eventName of eventNames) {\n\t\tgetEventProducers(instance, eventName).add(producer);\n\t}\n\n\treturn {\n\t\tasync next() {\n\t\t\tif (!queue) {\n\t\t\t\treturn {done: true};\n\t\t\t}\n\n\t\t\tif (queue.length === 0) {\n\t\t\t\tif (isFinished) {\n\t\t\t\t\tqueue = undefined;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\tawait new Promise(resolve => {\n\t\t\t\t\tflush = resolve;\n\t\t\t\t});\n\n\t\t\t\treturn this.next();\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdone: false,\n\t\t\t\tvalue: await queue.shift()\n\t\t\t};\n\t\t},\n\n\t\tasync return(value) {\n\t\t\tqueue = undefined;\n\n\t\t\tfor (const eventName of eventNames) {\n\t\t\t\tgetEventProducers(instance, eventName).delete(producer);\n\t\t\t}\n\n\t\t\tflush();\n\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\t{done: true, value: await value} :\n\t\t\t\t{done: true};\n\t\t},\n\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t}\n\t};\n}\n\nfunction defaultMethodNamesOrAssert(methodNames) {\n\tif (methodNames === undefined) {\n\t\treturn allEmitteryMethods;\n\t}\n\n\tif (!Array.isArray(methodNames)) {\n\t\tthrow new TypeError('`methodNames` must be an array of strings');\n\t}\n\n\tfor (const methodName of methodNames) {\n\t\tif (!allEmitteryMethods.includes(methodName)) {\n\t\t\tif (typeof methodName !== 'string') {\n\t\t\t\tthrow new TypeError('`methodNames` element must be a string');\n\t\t\t}\n\n\t\t\tthrow new Error(`${methodName} is not Emittery method`);\n\t\t}\n\t}\n\n\treturn methodNames;\n}\n\nconst isListenerSymbol = symbol => symbol === listenerAdded || symbol === listenerRemoved;\n\nclass Emittery {\n\tstatic mixin(emitteryPropertyName, methodNames) {\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\t\treturn target => {\n\t\t\tif (typeof target !== 'function') {\n\t\t\t\tthrow new TypeError('`target` must be function');\n\t\t\t}\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tif (target.prototype[methodName] !== undefined) {\n\t\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getEmitteryProperty() {\n\t\t\t\tObject.defineProperty(this, emitteryPropertyName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: new Emittery()\n\t\t\t\t});\n\t\t\t\treturn this[emitteryPropertyName];\n\t\t\t}\n\n\t\t\tObject.defineProperty(target.prototype, emitteryPropertyName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tget: getEmitteryProperty\n\t\t\t});\n\n\t\t\tconst emitteryMethodCaller = methodName => function (...args) {\n\t\t\t\treturn this[emitteryPropertyName][methodName](...args);\n\t\t\t};\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tObject.defineProperty(target.prototype, methodName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: emitteryMethodCaller(methodName)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn target;\n\t\t};\n\t}\n\n\tstatic get isDebugEnabled() {\n\t\tif (typeof process !== 'object') {\n\t\t\treturn isGlobalDebugEnabled;\n\t\t}\n\n\t\tconst {env} = process || {env: {}};\n\t\treturn env.DEBUG === 'emittery' || env.DEBUG === '*' || isGlobalDebugEnabled;\n\t}\n\n\tstatic set isDebugEnabled(newValue) {\n\t\tisGlobalDebugEnabled = newValue;\n\t}\n\n\tconstructor(options = {}) {\n\t\tanyMap.set(this, new Set());\n\t\teventsMap.set(this, new Map());\n\t\tproducersMap.set(this, new Map());\n\t\tthis.debug = options.debug || {};\n\n\t\tif (this.debug.enabled === undefined) {\n\t\t\tthis.debug.enabled = false;\n\t\t}\n\n\t\tif (!this.debug.logger) {\n\t\t\tthis.debug.logger = (type, debugName, eventName, eventData) => {\n\t\t\t\teventData = JSON.stringify(eventData);\n\n\t\t\t\tif (typeof eventName === 'symbol') {\n\t\t\t\t\teventName = eventName.toString();\n\t\t\t\t}\n\n\t\t\t\tconst currentTime = new Date();\n\t\t\t\tconst logTime = `${currentTime.getHours()}:${currentTime.getMinutes()}:${currentTime.getSeconds()}.${currentTime.getMilliseconds()}`;\n\t\t\t\tconsole.log(`[${logTime}][emittery:${type}][${debugName}] Event Name: ${eventName}\\n\\tdata: ${eventData}`);\n\t\t\t};\n\t\t}\n\t}\n\n\tlogIfDebugEnabled(type, eventName, eventData) {\n\t\tif (Emittery.isDebugEnabled || this.debug.enabled) {\n\t\t\tthis.debug.logger(type, this.debug.name, eventName, eventData);\n\t\t}\n\t}\n\n\ton(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tgetListeners(this, eventName).add(listener);\n\n\t\t\tthis.logIfDebugEnabled('subscribe', eventName, undefined);\n\n\t\t\tif (!isListenerSymbol(eventName)) {\n\t\t\t\tthis.emit(listenerAdded, {eventName, listener});\n\t\t\t}\n\t\t}\n\n\t\treturn this.off.bind(this, eventNames, listener);\n\t}\n\n\toff(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tgetListeners(this, eventName).delete(listener);\n\n\t\t\tthis.logIfDebugEnabled('unsubscribe', eventName, undefined);\n\n\t\t\tif (!isListenerSymbol(eventName)) {\n\t\t\t\tthis.emit(listenerRemoved, {eventName, listener});\n\t\t\t}\n\t\t}\n\t}\n\n\tonce(eventNames) {\n\t\treturn new Promise(resolve => {\n\t\t\tconst off = this.on(eventNames, data => {\n\t\t\t\toff();\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t}\n\n\tevents(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t}\n\n\t\treturn iterator(this, eventNames);\n\t}\n\n\tasync emit(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tthis.logIfDebugEnabled('emit', eventName, eventData);\n\n\t\tenqueueProducers(this, eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName);\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = isListenerSymbol(eventName) ? [] : [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\tawait Promise.all([\n\t\t\t...staticListeners.map(async listener => {\n\t\t\t\tif (listeners.has(listener)) {\n\t\t\t\t\treturn listener(eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t\t...staticAnyListeners.map(async listener => {\n\t\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\t\treturn listener(eventName, eventData);\n\t\t\t\t}\n\t\t\t})\n\t\t]);\n\t}\n\n\tasync emitSerial(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tthis.logIfDebugEnabled('emitSerial', eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName);\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\t/* eslint-disable no-await-in-loop */\n\t\tfor (const listener of staticListeners) {\n\t\t\tif (listeners.has(listener)) {\n\t\t\t\tawait listener(eventData);\n\t\t\t}\n\t\t}\n\n\t\tfor (const listener of staticAnyListeners) {\n\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\tawait listener(eventName, eventData);\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-await-in-loop */\n\t}\n\n\tonAny(listener) {\n\t\tassertListener(listener);\n\n\t\tthis.logIfDebugEnabled('subscribeAny', undefined, undefined);\n\n\t\tanyMap.get(this).add(listener);\n\t\tthis.emit(listenerAdded, {listener});\n\t\treturn this.offAny.bind(this, listener);\n\t}\n\n\tanyEvent() {\n\t\treturn iterator(this);\n\t}\n\n\toffAny(listener) {\n\t\tassertListener(listener);\n\n\t\tthis.logIfDebugEnabled('unsubscribeAny', undefined, undefined);\n\n\t\tthis.emit(listenerRemoved, {listener});\n\t\tanyMap.get(this).delete(listener);\n\t}\n\n\tclearListeners(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tthis.logIfDebugEnabled('clear', eventName, undefined);\n\n\t\t\tif (typeof eventName === 'string' || typeof eventName === 'symbol') {\n\t\t\t\tgetListeners(this, eventName).clear();\n\n\t\t\t\tconst producers = getEventProducers(this, eventName);\n\n\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\tproducer.finish();\n\t\t\t\t}\n\n\t\t\t\tproducers.clear();\n\t\t\t} else {\n\t\t\t\tanyMap.get(this).clear();\n\n\t\t\t\tfor (const listeners of eventsMap.get(this).values()) {\n\t\t\t\t\tlisteners.clear();\n\t\t\t\t}\n\n\t\t\t\tfor (const producers of producersMap.get(this).values()) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tlistenerCount(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tlet count = 0;\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tif (typeof eventName === 'string') {\n\t\t\t\tcount += anyMap.get(this).size + getListeners(this, eventName).size +\n\t\t\t\t\tgetEventProducers(this, eventName).size + getEventProducers(this).size;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (typeof eventName !== 'undefined') {\n\t\t\t\tassertEventName(eventName);\n\t\t\t}\n\n\t\t\tcount += anyMap.get(this).size;\n\n\t\t\tfor (const value of eventsMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\n\t\t\tfor (const value of producersMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\tbindMethods(target, methodNames) {\n\t\tif (typeof target !== 'object' || target === null) {\n\t\t\tthrow new TypeError('`target` must be an object');\n\t\t}\n\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\n\t\tfor (const methodName of methodNames) {\n\t\t\tif (target[methodName] !== undefined) {\n\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t}\n\n\t\t\tObject.defineProperty(target, methodName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: this[methodName].bind(this)\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst allEmitteryMethods = Object.getOwnPropertyNames(Emittery.prototype).filter(v => v !== 'constructor');\n\nObject.defineProperty(Emittery, 'listenerAdded', {\n\tvalue: listenerAdded,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false\n});\nObject.defineProperty(Emittery, 'listenerRemoved', {\n\tvalue: listenerRemoved,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false\n});\n\nmodule.exports = Emittery;\n","/**\n\nthe page api for iframe bridge\n\niframe -> me:\n  SetPage(3) // pages = [1,2,3]\n  PageTo(1)  // page = 1\n  PrevPage() // page = Math.max(1, page - 1)\n  NextPage() // page = Math.min(pages.length, page + 1)\n\nme -> iframe:\n  RoomStateChanged(pageEvent(page))\n\n*/\n\nimport type { RoomState } from \"white-web-sdk\";\n\nexport function fakeRoomStateChanged(\n  page: number,\n  maxPage: number,\n  contextPath: string\n): Partial<RoomState> {\n  return {\n    sceneState: {\n      sceneName: `${page}`,\n      scenePath: `${contextPath}/${page}`,\n      contextPath,\n      scenes: pageToScenes(maxPage),\n      index: page - 1,\n    },\n  };\n}\n\nexport function pageToScenes(maxPage: number): { name: string }[] {\n  const scenes = [];\n  for (let page = 1; page <= maxPage; ++page) {\n    scenes.push({ name: String(page) });\n  }\n  return scenes;\n}\n\nexport function prevPage(page: number): number {\n  return Math.max(1, page - 1);\n}\n\nexport function nextPage(page: number, maxPage: number): number {\n  return Math.min(maxPage, page + 1);\n}\n","export const width = 630;\nexport const height = 350;\n","export enum IframeEvents {\n  Init = \"Init\",\n  AttributesUpdate = \"AttributesUpdate\",\n  SetAttributes = \"SetAttributes\",\n  RegisterMagixEvent = \"RegisterMagixEvent\",\n  RemoveMagixEvent = \"RemoveMagixEvent\",\n  RemoveAllMagixEvent = \"RemoveAllMagixEvent\",\n  RoomStateChanged = \"RoomStateChanged\",\n  DispatchMagixEvent = \"DispatchMagixEvent\",\n  ReceiveMagixEvent = \"ReciveMagixEvent\", // the typo is intentional to stay the same\n  NextPage = \"NextPage\",\n  PrevPage = \"PrevPage\",\n  SDKCreate = \"SDKCreate\",\n  OnCreate = \"OnCreate\",\n  SetPage = \"SetPage\",\n  GetAttributes = \"GetAttributes\",\n  Ready = \"Ready\",\n  Destroy = \"Destory\", // the typo is intentional to stay the same\n  StartCreate = \"StartCreate\",\n  WrapperDidUpdate = \"WrapperDidUpdate\",\n  DisplayIframe = \"DisplayIframe\",\n  HideIframe = \"HideIframe\", // will never emit\n  PageTo = \"PageTo\",\n}\n\nexport enum DomEvents {\n  WrapperDidMount = \"WrapperDidMount\",\n  IframeLoad = \"IframeLoad\",\n}\n","import type { AppContext } from \"@netless/window-manager\";\n\nexport interface UserPayload {\n  memberId: number;\n  uid: string;\n  userId: string;\n  nickName: string;\n  cursorName: string;\n}\n\nexport function getUserPayload(context: AppContext): UserPayload {\n  const room = context.getRoom();\n  const displayer = context.getDisplayer();\n  const memberId = displayer.observerId;\n  const userPayload = displayer.state.roomMembers.find(\n    member => member.memberId === memberId\n  )?.payload;\n  const uid = userPayload?.uid || room?.uid || \"\";\n  const nickName = userPayload?.nickName || uid;\n  const userId = userPayload?.userId || uid;\n  const cursorName = userPayload?.cursorName || nickName || \"\";\n  return { memberId, uid, userId, nickName, cursorName };\n}\n\n// from @polka/url (https://github.com/lukeed/polka, MIT license)\nexport function parse(url: string) {\n  const index = url.indexOf(\"?\", 1);\n  if (index !== -1) {\n    return {\n      search: url.slice(index),\n      pathname: url.slice(0, index),\n    };\n  }\n  return {\n    search: \"\",\n    pathname: url,\n  };\n}\n\nexport function appendQuery(url: string, query: string) {\n  const { pathname, search } = parse(url);\n  return pathname + (search ? `${search}&` : \"?\") + query;\n}\n\nexport function element<T extends keyof HTMLElementTagNameMap>(tag: T) {\n  return document.createElement(tag);\n}\n\nexport function attr(el: HTMLElement, key: string, value: string | null) {\n  if (value == null) {\n    el.removeAttribute(key);\n  } else {\n    el.setAttribute(key, value);\n  }\n}\n\nexport function append(el: HTMLElement, node: HTMLElement) {\n  return el.appendChild(node);\n}\n\nexport function detach(el: HTMLElement) {\n  return el.parentNode?.removeChild(el);\n}\n\nexport function noop() {\n  // noop\n}\n\nexport const nextTick = /* @__PURE__ */ Promise.resolve();\n\nexport function writable<T>(value: T) {\n  const listeners: Array<(value: T) => void> = [];\n\n  return {\n    get value() {\n      return value;\n    },\n    set(newValue: T) {\n      value = newValue;\n      listeners.forEach(listener => listener(value));\n    },\n    subscribe(listener: (value: T) => void) {\n      listeners.push(listener);\n      nextTick.then(() => listener(value));\n      return () => {\n        listeners.splice(listeners.indexOf(listener), 1);\n      };\n    },\n  };\n}\n","const _ua = window.navigator?.userAgent;\n\nconst math = _ua?.match(/(Edge?)\\/(\\d+)/);\n\nexport const isOldEdge = () => {\n  return math && math[1] == \"Edge\" && parseInt(math[2]) < 19 ? true : false;\n};\n// 是否为 IE\nexport const isIE = () => {\n  return \"ActiveXObject\" in window;\n};\n// 是否为 webkit\nexport const isWebkit = () => {\n  return /webkit/i.test(_ua);\n};\nexport const isApple = () => {\n  return /apple/i.test(_ua.toLocaleLowerCase());\n};\nexport const isElectron = () => {\n  return /electron/i.test(_ua.toLocaleLowerCase()) && window.self === window.top;\n};\nexport const isMacOS = () => {\n  return /mac/i.test(_ua.toLocaleLowerCase());\n};\nexport const isWin = () => {\n  return /win/i.test(_ua.toLocaleLowerCase());\n};\nexport const isIOS = () => {\n  return (\n    typeof navigator !== \"undefined\" &&\n    typeof window !== \"undefined\" &&\n    /iPad|iPhone|iPod/.test(_ua)\n  );\n};\nexport const isAndroid = () => {\n  return typeof navigator !== \"undefined\" && /Android/.test(_ua);\n};\nexport const isFirefox = () => {\n  return typeof navigator !== \"undefined\" && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(_ua);\n};\nexport const isSafari = () => {\n  return typeof navigator !== \"undefined\" && /Version\\/[\\d/.]+.*Safari/.test(_ua);\n};\n\n// \"modern\" Edge was released at 79.x\nexport const isEdgeLegacy = () => {\n  return typeof navigator !== \"undefined\" && /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])/i.test(_ua);\n};\nexport const isChrome = () => {\n  return typeof navigator !== \"undefined\" && /Chrome/i.test(_ua);\n};\n// Native events don't work well with react on Chrome 75\n// and older, Chrome 76+ is ok.\nexport const isChromeLegacy = () => {\n  return typeof navigator !== \"undefined\" && /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])/i.test(_ua);\n};\nexport const isFirefoxLegacy = () => {\n  return (\n    typeof navigator !== \"undefined\" &&\n    /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])).*/i.test(_ua)\n  );\n};\n// qq browser\nexport const is_QQBrowser = () => {\n  return typeof navigator !== \"undefined\" && /.*QQBrowser/.test(_ua);\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ensureAttributes } from \"@netless/app-shared\";\nimport { WindowManager, type NetlessApp } from \"@netless/window-manager\";\nimport Emittery from \"emittery\";\nimport { SideEffectManager } from \"side-effect-manager\";\nimport type { AnimationMode, ApplianceNames, Event, RoomState } from \"white-web-sdk\";\nimport { fakeRoomStateChanged, nextPage, pageToScenes, prevPage } from \"./page\";\nimport { height } from \"./hardcode\";\nimport { DomEvents, IframeEvents } from \"./typings\";\nimport { getUserPayload } from \"./utils\";\nimport { isAndroid, isIOS } from \"./environment\";\n\nexport interface Attributes {\n  src: string;\n  displaySceneDir: string;\n  lastEvent: { name: string; payload: unknown } | null;\n  state: Record<string, unknown>;\n  page: number;\n  maxPage: number;\n  uid?: string | null;\n}\n\nconst ClickThroughAppliances = new Set([\"clicker\", \"selector\"]);\n\nconst IframeBridge: NetlessApp<Attributes> = {\n  kind: \"IframeBridge\",\n  setup(context) {\n    const box = context.getBox();\n    const view = context.getView();\n    const displayer = context.getDisplayer();\n    const room = context.getRoom();\n    const { uid } = getUserPayload(context);\n\n    const attrs = ensureAttributes(context, {\n      src: \"about:blank\",\n      displaySceneDir: \"/h5\",\n      lastEvent: null,\n      state: {},\n      page: 0,\n      maxPage: 0,\n    });\n\n    const sideEffectManager = new SideEffectManager();\n\n    const container = document.createElement(\"div\");\n    Object.assign(container.style, { width: \"100%\", height: \"100%\", position: \"relative\" });\n\n    const iframe = document.createElement(\"iframe\");\n    Object.assign(iframe.style, {\n      width: \"100%\",\n      height: \"100%\",\n      border: \"none\",\n      display: \"block\",\n    });\n    container.appendChild(iframe);\n\n    const role = context.storage.state.uid === uid ? 0 : 2;\n    if (role == 0) {\n      const closeBtn = document.createElement(\"button\");\n      Object.assign(closeBtn.style, {\n        position: \"absolute\",\n        right: \"10px\",\n        top: \"10px\",\n        zIndex: 1000,\n        background: \"white\",\n        border: \"none\",\n        borderRadius: \"100%\",\n        width: \"30px\",\n        height: \"30px\",\n        boxShadow: \"0 20px 25px -5px #0000001a, 0 8px 10px -6px #0000001a\",\n      });\n      closeBtn.innerHTML = \"X\";\n      container.appendChild(closeBtn);\n      closeBtn.onclick = function (e: MouseEvent) {\n        e.preventDefault();\n        e.stopPropagation();\n        box._delegateEvents.emit(\"close\");\n      };\n    }\n\n    box.mountContent(container);\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    let toggleClickThrough: (enable?: boolean) => void = () => {};\n    const shouldClickThrough = (tool?: ApplianceNames) => {\n      return isIOS() || isAndroid() || WindowManager.appReadonly\n        ? false\n        : ClickThroughAppliances.has(tool as ApplianceNames);\n    };\n\n    if (view) {\n      const viewBox = document.createElement(\"div\");\n      Object.assign(viewBox.style, {\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        overflow: \"hidden\",\n      });\n      container.appendChild(viewBox);\n      context.mountView(viewBox);\n\n      view.disableCameraTransform = true;\n      sideEffectManager.add(() => {\n        const onResize = () => {\n          const clientRect = container.getBoundingClientRect();\n          const scale = clientRect.height / height;\n          view.moveCamera({ scale, animationMode: \"immediately\" as AnimationMode });\n        };\n        const observer = new ResizeObserver(onResize);\n        observer.observe(container);\n        return () => observer.disconnect();\n      });\n\n      toggleClickThrough = (enable?: boolean) => {\n        viewBox.style.pointerEvents = enable ? \"none\" : \"auto\";\n      };\n\n      toggleClickThrough(shouldClickThrough(room?.state.memberState.currentApplianceName));\n    }\n\n    const withReadonlyAttributes = (state: Record<string, unknown>) => ({\n      ...state,\n      // for backward compatibility\n      url: attrs.src,\n      displaySceneDir: attrs.displaySceneDir,\n      width: iframe.scrollWidth,\n      height: iframe.scrollHeight,\n      useClicker: true,\n      lastEvent: attrs.lastEvent,\n    });\n\n    const emitter = new Emittery<Record<IframeEvents | DomEvents, any>>();\n    const magixEventMap = new Map<string, (event: Event) => void>();\n\n    const removeAllMagixEvent = () => {\n      magixEventMap.forEach((listener, event) => {\n        displayer.removeMagixEventListener(event, listener);\n      });\n      magixEventMap.clear();\n    };\n\n    const log = (...args: any) => import.meta.env.DEV && console.log(...args);\n\n    const postMessage = (message: { kind: IframeEvents; payload: any }) => {\n      log(\"[IframeBridge] postMessage %s %O\", message.kind, message.payload);\n      iframe.contentWindow?.postMessage(JSON.parse(JSON.stringify(message)), \"*\");\n    };\n\n    const dispatchMagixEvent = (event: string, payload: any) => {\n      if (context.getIsWritable()) {\n        context.updateAttributes([\"lastEvent\"], { name: event, payload });\n        log(\"[IframeBridge] dispatchMagixEvent %s %O\", event, payload);\n        room?.dispatchMagixEvent(event, payload);\n      }\n    };\n\n    const sendInitMessage = () => {\n      postMessage({\n        kind: IframeEvents.Init,\n        payload: {\n          attributes: withReadonlyAttributes(attrs.state),\n          roomState: displayer.state,\n          currentPage: attrs.page,\n          observerId: displayer.observerId,\n        },\n      });\n    };\n\n    let hackCocos = attrs.src.includes(\"cocos\");\n\n    const onLoad = (ev: globalThis.Event): void => {\n      sendInitMessage();\n      emitter.emit(DomEvents.IframeLoad, ev);\n      emitter.on(IframeEvents.Ready, () => {\n        if (attrs.lastEvent?.payload) {\n          postMessage(attrs.lastEvent?.payload as { kind: IframeEvents; payload: any });\n        }\n      });\n      if (hackCocos) {\n        setTimeout(() => {\n          postMessage({\n            kind: IframeEvents.RoomStateChanged,\n            payload: fakeRoomStateChanged(1, attrs.maxPage, attrs.displaySceneDir),\n          });\n        }, 500);\n        hackCocos = false;\n      }\n      iframe.removeEventListener(\"load\", onLoad);\n    };\n    sideEffectManager.addEventListener(iframe, \"load\", onLoad);\n\n    let retryCount = 0;\n    const onError = (): void => {\n      // try again\n      if (retryCount++ < 3) {\n        iframe.src = attrs.src;\n      }\n    };\n    sideEffectManager.addEventListener(iframe, \"error\", onError);\n\n    iframe.src = attrs.src;\n\n    sideEffectManager.add(() =>\n      context.mobxUtils.autorun(() => {\n        postMessage({\n          kind: IframeEvents.AttributesUpdate,\n          payload: withReadonlyAttributes(attrs.state),\n        });\n      })\n    );\n    sideEffectManager.add(() =>\n      context.mobxUtils.autorun(() => {\n        iframe.src = attrs.src;\n      })\n    );\n\n    sideEffectManager.add(() =>\n      context.mobxUtils.autorun(() => {\n        postMessage({\n          kind: IframeEvents.RoomStateChanged,\n          payload: fakeRoomStateChanged(attrs.page, attrs.maxPage, attrs.displaySceneDir),\n        });\n      })\n    );\n\n    const bridge = {\n      emitter,\n      postMessage,\n      context,\n    };\n\n    emitter.emit(IframeEvents.StartCreate);\n    emitter.emit(IframeEvents.OnCreate, bridge);\n\n    if (room) {\n      sideEffectManager.add(() => {\n        const onRoomStateChanged = (e: Partial<RoomState>) => {\n          if (e.memberState) {\n            toggleClickThrough(shouldClickThrough(e.memberState.currentApplianceName));\n          }\n        };\n        room.callbacks.on(\"onRoomStateChanged\", onRoomStateChanged);\n        return () => room.callbacks.off(\"onRoomStateChanged\", onRoomStateChanged);\n      });\n    }\n\n    sideEffectManager.addEventListener(window, \"message\", (ev: MessageEvent) => {\n      if (ev.source !== iframe.contentWindow) {\n        return;\n      }\n      const data: { kind: IframeEvents; payload: any } = ev.data;\n      log(\"[IframeBridge] received\", data.kind, data.payload);\n      switch (data.kind) {\n        case IframeEvents.SetAttributes: {\n          context.updateAttributes([\"state\"], { ...attrs.state, ...data.payload });\n          break;\n        }\n        case IframeEvents.RegisterMagixEvent: {\n          const listener = (ev: Event) => {\n            if (ev.authorId === displayer.observerId) {\n              return;\n            }\n            postMessage({ kind: IframeEvents.ReceiveMagixEvent, payload: ev });\n          };\n          const eventName = data.payload;\n          magixEventMap.set(eventName, listener);\n          displayer.addMagixEventListener(eventName, listener);\n          break;\n        }\n        case IframeEvents.RemoveMagixEvent: {\n          const eventName = data.payload;\n          const listener = magixEventMap.get(eventName);\n          displayer.removeMagixEventListener(eventName, listener);\n          break;\n        }\n        case IframeEvents.DispatchMagixEvent: {\n          const ev: { event: string; payload: any } = data.payload;\n          dispatchMagixEvent(ev.event, ev.payload);\n          break;\n        }\n        case IframeEvents.RemoveAllMagixEvent: {\n          removeAllMagixEvent();\n          break;\n        }\n        case IframeEvents.NextPage: {\n          if (context.getIsWritable() && room) {\n            const page = nextPage(attrs.page, attrs.maxPage);\n            if (page === attrs.page) break;\n            context.setScenePath([attrs.displaySceneDir, page].join(\"/\"));\n            context.updateAttributes([\"page\"], page);\n            dispatchMagixEvent(IframeEvents.NextPage, {});\n          }\n          break;\n        }\n        case IframeEvents.PrevPage: {\n          if (context.getIsWritable() && room) {\n            const page = prevPage(attrs.page);\n            if (page === attrs.page) break;\n            context.setScenePath([attrs.displaySceneDir, page].join(\"/\"));\n            context.updateAttributes([\"page\"], page);\n            dispatchMagixEvent(IframeEvents.PrevPage, {});\n          }\n          break;\n        }\n        case IframeEvents.SetPage: {\n          const maxPage = Number(data.payload) || 0;\n          if (context.getIsWritable() && room) {\n            if (!maxPage) {\n              room.removeScenes(attrs.displaySceneDir);\n            } else {\n              const scenes = room.entireScenes()[attrs.displaySceneDir];\n              if (!scenes || scenes.length !== maxPage) {\n                room.removeScenes(attrs.displaySceneDir);\n                room.putScenes(attrs.displaySceneDir, pageToScenes(maxPage));\n              }\n              context.setScenePath(`${attrs.displaySceneDir}/1`);\n              log(\"[IframeBridge] SetPage\", maxPage);\n              context.updateAttributes([\"maxPage\"], maxPage);\n            }\n          }\n          break;\n        }\n        case IframeEvents.PageTo: {\n          const page = data.payload as number;\n          if (context.getIsWritable() && room) {\n            if (!Number.isSafeInteger(page) || page <= 0) break;\n            context.setScenePath(`${attrs.displaySceneDir}/${page}`);\n            context.updateAttributes([\"page\"], page);\n            dispatchMagixEvent(IframeEvents.PageTo, page - 1);\n          }\n          break;\n        }\n        case IframeEvents.SDKCreate: {\n          sendInitMessage();\n          break;\n        }\n        case IframeEvents.GetAttributes: {\n          postMessage({\n            kind: IframeEvents.GetAttributes,\n            payload: withReadonlyAttributes(attrs.state),\n          });\n          break;\n        }\n        default: {\n          console.warn(`[IframeBridge]: unknown event kind \"${data.kind}\"`);\n        }\n      }\n    });\n\n    context.emitter.on(\"destroy\", () => {\n      console.log(\"[IframeBridge]: destroy\");\n      emitter.emit(IframeEvents.Destroy);\n      sideEffectManager.flushAll();\n      removeAllMagixEvent();\n      iframe.remove();\n    });\n\n    if (import.meta.env.DEV) {\n      (window as any).iframeBridge = bridge;\n    }\n\n    return bridge;\n  },\n};\n\nexport default IframeBridge;\n"],"names":["WindowManager","Emittery"],"mappings":"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"}